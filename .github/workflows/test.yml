name: Run Tests

on:
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: testing
          MYSQL_USER: appuser
          MYSQL_PASSWORD: apppassword
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-start-period=20s
          --health-timeout=5s
          --health-retries=3

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache Node.js modules
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Node.js dependencies
        run: npm install

      - name: Cache Composer packages
        uses: actions/cache@v3
        with:
          path: ~/.composer/cache
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'

      - name: Install PHP dependencies
        run: composer install

      - name: Wait for MySQL
        run: |
          for i in {1..10}; do
            if mysqladmin ping -h 127.0.0.1 -u root --password=root &> /dev/null; then
              echo "MySQL is ready!";
              break;
            fi
            echo "Waiting for MySQL...";
            sleep 5;
          done

      - name: Clear Laravel cache
        run: php artisan config:clear

      - name: Generate Ziggy routes
        run: php artisan ziggy:generate

      - name: Build Frontend Assets
        env:
          APP_ENV: production
          NODE_ENV: production
        run: npm run build

      - name: Run Migrations
        env:
          APP_ENV: testing
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: appuser
          DB_PASSWORD: apppassword
        run: php artisan migrate --force

      - name: Run Tests
        env:
          APP_ENV: testing
          NODE_ENV: production
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: appuser
          DB_PASSWORD: apppassword
        run: |
          npm run vitest
          ./vendor/bin/phpunit